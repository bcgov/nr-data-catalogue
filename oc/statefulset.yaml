kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: postgresql
  template:
    metadata:
      creationTimestamp: null
      labels:
        DataClass: Low
        app: postgresql
        deployment: postgresql
    spec:
      volumes:
        - name: data
          emptyDir: {}
        - name: postgresql-volume-2
          configMap:
            name: postgresql-script
            defaultMode: 420
        - name: postgresql-volume-3
          emptyDir: {}
      containers:
        - resources:
            requests:
              cpu: 10m
          terminationMessagePath: /dev/termination-log
          name: postgresql
          env:
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: POSTGRESQL_PASSWORD
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: data
              mountPath: /bitnami/postgresql
            - name: postgresql-volume-2
              mountPath: /docker-entrypoint-initdb.d
            - name: postgresql-volume-3
              mountPath: /docker-entrypoint-preinitdb.d
          terminationMessagePolicy: File
          image: ghcr.io/bcgov/nr-data-catalogue-postgresql:main
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: data
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: primary
          app.kubernetes.io/instance: openmetadata-dependencies
          app.kubernetes.io/name: postgresql
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 500Mi
        volumeMode: Filesystem
  serviceName: postgresql
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: 10